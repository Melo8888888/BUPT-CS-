初始状态:
r0 = 00001000
r1 = 00010100
内存[00010100] = 00000011

写指令：
00H ADD r0, r1
指令: 0001 00 01
结果: r0 = 00011100, r1 = 00010100

01H SUB r0, r1
指令: 0010 00 01
结果: r0 = 00001000, r1 = 00010100

02H  NOT r0
指令: 1101 00 00
结果: r0 =11110111 , r1 = 00010100

03H LD r0, r1
指令: 0101 00 01
结果: r0 = 00000011, r1 = 00000100

04H MOV r1, r0
指令: 1011 01 00
结果: r0 = 00000011, r1 = 00000011

05H INC r0
指令: 0100 00 00
结果: r0 = 00000100, r1 = 00000011

06H JC 偏移量 (+4)
指令: 0111 0100
结果: r0 = 00000100, r1 = 00000011 (跳转不发生，因为C=0)

07H SUB r0, r0
指令: 0010 00 00
结果: r0 = 00000000, r1 = 00000011 (此时Z=1)

08H JZ 偏移量 (+1)
指令: 1000 0001
结果: 跳转成功，PC = PC + 2=0AH

09H  STP(会直接被跳过)
指令: 1110 00 00

0AH ADD r1,r1
指令：0001 0101
结果：r0=00000000,r1=00000110

0BH JMP r1
指令: 1001 01 00
结果: PC = r1 = 00000110

0CH STP
指令: 1110 00 00
结果: 停机





具体的过程：


00H ADD r0, r1
指令: 0001 00 01
结果: r0 = 00011100, r1 = 00010100

01H SUB r0, r1
指令: 0010 00 01
结果: r0 = 00001000, r1 = 00010100

02H  NOT r0
指令: 1101 00 00
结果: r0 =11110111 , r1 = 00010100

03H LD r0, r1
指令: 0101 00 01
结果: r0 = 00000011, r1 = 00000100

04H MOV r1, r0
指令: 1011 01 00
结果: r0 = 00000011, r1 = 00000011

05H INC r0
指令: 0100 00 00
结果: r0 = 00000100, r1 = 00000011

06H JC 偏移量 (+4)
指令: 0111 0100
结果: r0 = 00000100, r1 = 00000011 (跳转不发生，因为C=0)

07H SUB r0, r0
指令: 0010 00 00
结果: r0 = 00000000, r1 = 00000011 (此时Z=1)

08H JZ 偏移量 (+1)
指令: 1000 0001
结果: 跳转成功，PC = PC + 2=0AH

09H  STP(直接被跳过)
指令: 1110 00 00

0AH ADD r1,r1
指令：0001 0101
结果：r0=00000000,r1=00000110

0BH JMP r1
指令: 1001 01 00
结果: PC = r1 = 00000110

06H JC 偏移量 (+4)
指令: 0111  0100
结果: r0 = 00000 00, r1 = 0000011  (跳转不发生，因为C=0)

07H SUB r0, r0
指令: 0010 00 00
结果: r0 = 00000000, r1 = 00000110 (此时Z=1)

08H JZ 偏移量 (+1)
指令: 1000 0001
结果: 跳转成功，PC = PC + 2

0AH ADD r1,r1
指令：0001 0101
结果：r0=00000000,r1=00001100

0BH JMP r1
不停的循环 
取巧  恰巧到stp

0CH STP
指令: 1110 00 00
结果: 停机
